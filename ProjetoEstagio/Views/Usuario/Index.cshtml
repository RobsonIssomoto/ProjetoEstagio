@model List<UsuarioModel>
@{
    Layout = "_LayoutTeste";
    ViewData["Title"] = "LISTA DE USUÁRIOS";
}

@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Sucesso!</strong> @TempData["MensagemSucesso"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Erro!</strong> @TempData["MensagemErro"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="text-center">
    <div class="d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary" asp-controller="Usuario" asp-action="Cadastrar" role="button">Adicionar novo usuário</a>
    </div>
</div>
<h2 class="display-4 text-center">LISTA DE USUÁRIOS</h2>
<table id="usuarioTable" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>#</th>
            <th>Login</th>
            <th>Email</th>
            <th>Data de Cadastro</th>
            <th>Ação</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (UsuarioModel usuario in Model)
            {
                <tr>
                    <td>@usuario.Id</td>
                    <td>@usuario.Login</td>
                    <td>@usuario.Email</td>
                    <td>@usuario.DataCadastro</td>
                    <td class="d-flex no-wrap">
                        <a asp-action="Editar" asp-route-id="@usuario.Id" class="btn btn-primary btn-sm me-1"><i class="fa-solid fa-pen-to-square"></i></a>
                        <a asp-action="DeletarConfirmar" asp-route-id="@usuario.Id" class="btn btn-danger btn-sm"><i class="fa-solid fa-trash"></i></a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function () {

            // --- Máscaras ---
            $('.cpf').mask('000.000.000-00');
            $('.cnpj').mask('00.000.000/0000-00');
            $('.codigo').mask('00');
            $('.telefone').mask('00000-0000');
            $('.telefone_com_ddd').mask('(00) 00000-0000');
            $('.nome').mask('A', {
                'translation': {
                    A: {
                        pattern: /[A-Za-z\s+]/,
                        recursive: true
                    }
                }
            });

            // --- DataTables ---
            // Apenas a tabela desta página é iniciada
            getDataTable('#usuarioTable');

            // --- Toggle de Senha (se precisar nesta página) ---
            $(".input-icon-toggle").on('click', function () {
                var $icon = $(this).find('i');
                var $passwordInput = $(this).siblings('input.form-control');

                if ($passwordInput.attr('type') === 'password') {
                    $passwordInput.attr('type', 'text');
                    $icon.removeClass('bi-eye').addClass('bi-eye-slash');
                } else {
                    $passwordInput.attr('type', 'password');
                    $icon.removeClass('bi-eye-slash').addClass('bi-eye');
                }
            });

        });

        // Função que inicializa o DataTable
        function getDataTable(id) {
            $(id).DataTable({
                "ordering": true,
                "searching": true,
                "paging": true,
                "oLanguage": {
                    "sEmptyTable": "Nenhum registro encontrado na tabela",
                    "sInfo": "Mostra _START_ até _END_ de _TOTAL_ registros",
                    "sInfoEmpty": "Mostar 0 até 0 de 0 Registros",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Mostrar _MENU_ registros por página",
                    "sLoadingRecords": "Carregando",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "Pesquisar",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeira",
                        "sLast": "Última"
                    }
                }
            });
        }

        // Funções de Alerta (opcional, mas estava no seu JS original)
        const alertPlaceholder = document.getElementById('liveAlertPlaceholder')
        const appendAlert = (message, type) => {
            const wrapper = document.createElement('div')
            wrapper.innerHTML = [
                `<div class="alert alert-${type} alert-dismissible" role="alert">`,
                `   <div>${message}</div>`,
                '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
                '</div>'
            ].join('')

            alertPlaceholder.append(wrapper)
        }

        const alertTrigger = document.getElementById('liveAlertBtn')
        if (alertTrigger) {
            alertTrigger.addEventListener('click', () => {
                appendAlert('Nice, you triggered this alert message!', 'success')
            })
        }
    </script>
}